npm init playwright@latest - Comando que trae todos los archivos de node para playwright en su ultima version

npm standar

npx playwright test

npm i dotenv --save-dev

Elements Anatomy: 
Element type - 
Properties: type, id, class - 
Value: text, name, form


___XPATH NO RECOMENDADO___ ya que los elementos del DOM pueden cambiar
Xpath: 
   Elem   prop  Val
    |      |     |
//input[@type='text']


Absolute path: es literalmente la ruta donde se encuentra el elemento > </html/head/body/div> PARA NADA RECOMENDADO
Relative path: ruta arbitraria que busca los elementos sin importar la profundidad del arbol del DOM


Css selector:
input.form (by class) //formas cortas basicas para encontrar elementos con css
input#name (by id)

LOCATORS--
getByPlaceholder:
<input type="email" placeholder="name@example.com">
getByAltText:
<img alt='playwright logo'>
getByRole


Comando para revisar la version de playwright: 
npm outdated <@playwright/test>
npm install -D @playwright/test@latest
npm install -D @playwright/test@1.54.1
RUTA DONDE SE GUARDAN LOS NAVEGADORES: C:\Users\irvin\AppData\Local\ms-playwright
npx playwright install

#SIEMPRE ANTES DE HACER CAMBIOS EN LOS NAVEGADORES Y EN ACTUALIZACIONES, CREAR UNA NUEVA RAMA#

POM-Page-Object-Model: Separar la logica de interaccion con la pagina en una clase especifica de lo que estamos interactuando

npx playwright test saucedemo3.spec.ts -g "purchase an item"//comando para ejecutar un test especifico

npx playwright test saucedemo3.spec.ts -g "purchase an item" --repeat-each 5 //comando para ejecutar un test especifico pero n numero de veces



---------DOCKER------------
Creamos un archivo si extension llamado Dockerfile que tendra lo siguiente:

//
FROM jenkins/jenkins:lts-jdk17

USER root 
RUN curl -sSL https://get.docker.com/ | sh
//

En el directorio en donde se encuentra ese archivo

C:\Users\irvin\Downloads>

Ahora en la linea de comandos va el siguiente comando
--docker build --tag docker-in-docker-jenkins . // Se crea una imagen con el nombre docker-in-docker-jenkins en el directorio actual (.)
C:\Users\irvin\Downloads>docker run --rm --group-add 0 -v "//var/run/docker.sock:/var/run/docker.sock" -p 8080:8080 -v jenkins_home:/var/jenkins_home --name jenkins docker-in-docker-jenkins//este comando lo que hace es crear el contenedor
